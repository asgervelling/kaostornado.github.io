{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","dictionary","require","wordIndex","Math","round","random","length","useState","shoutouttohisfamily","setShoutouttohisfamily","splice","textToSpeech","fs","util","client","TextToSpeechClient","a","request","input","text","voice","languageCode","ssmlGender","audioConfig","audioEncoding","synthesizeSpeech","response","writeFile","promisify","audioContent","console","log","quickStart","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4ilcAAe,I,cCwDAA,MApDf,WACE,IAAIC,EAAaC,EAAQ,KAErBC,EAAYC,KAAKC,MAAOD,KAAKE,SAAWL,EAAWM,QACvD,EAAsDC,mBAASP,EAAWE,IAA1E,mBAAOM,EAAP,KAA4BC,EAA5B,KACAT,EAAWU,OAAOR,EAAW,GAU7B,IAAMS,EAAeV,EAAQ,KAGvBW,EAAKX,EAAQ,IACbY,EAAOZ,EAAQ,IAEfa,EAAS,IAAIH,EAAaI,mBArBnB,4CAsBb,oCAAAC,EAAA,4DAEe,gBAGPC,EAAU,CACdC,MAAO,CAACC,KAJG,iBAMXC,MAAO,CAACC,aAAc,QAASC,WAAY,WAE3CC,YAAa,CAACC,cAAe,QAVjC,SAc2BV,EAAOW,iBAAiBR,GAdnD,0CAcSS,EAdT,KAgBQC,EAAYd,EAAKe,UAAUhB,EAAGe,WAhBtC,UAiBQA,EAAU,aAAcD,EAASG,aAAc,UAjBvD,QAkBEC,QAAQC,IAAI,6CAlBd,6CAtBa,sBA4Cb,OA5Ca,mCA0CbC,GAGE,sBAAKC,UAAU,MAAf,UACE,8CAAiBzB,KACjB,wBAAQ0B,QAvCZ,WACEhC,EAAYC,KAAKC,MAAOD,KAAKE,SAAWL,EAAWM,QACnDG,EAAuBT,EAAWE,IAClCF,EAAWU,OAAOR,EAAW,IAoC3B,yBCvCSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78f3d94b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let dictionary = require(\"./resources/danskesubstantiver.json\");\n\n  let wordIndex = Math.round( Math.random() * dictionary.length);\n  const [shoutouttohisfamily, setShoutouttohisfamily] = useState(dictionary[wordIndex]);\n  dictionary.splice(wordIndex, 1);\n  \n\n  function getNewWord() {\n    wordIndex = Math.round( Math.random() * dictionary.length);\n    setShoutouttohisfamily(dictionary[wordIndex]);\n    dictionary.splice(wordIndex, 1);\n  }\n\n  // Imports the Google Cloud client library\n  const textToSpeech = require('@google-cloud/text-to-speech');\n\n  // Import other required libraries\n  const fs = require('fs');\n  const util = require('util');\n  // Creates a client\n  const client = new textToSpeech.TextToSpeechClient();\n  async function quickStart() {\n    // The text to synthesize\n    const text = 'hello, world!';\n\n    // Construct the request\n    const request = {\n      input: {text: text},\n      // Select the language and SSML voice gender (optional)\n      voice: {languageCode: 'en-US', ssmlGender: 'NEUTRAL'},\n      // select the type of audio encoding\n      audioConfig: {audioEncoding: 'MP3'},\n    };\n\n    // Performs the text-to-speech request\n    const [response] = await client.synthesizeSpeech(request);\n    // Write the binary audio content to a local file\n    const writeFile = util.promisify(fs.writeFile);\n    await writeFile('output.mp3', response.audioContent, 'binary');\n    console.log('Audio content written to file: output.mp3');\n  }\n  quickStart();\n\n  return (\n    <div className=\"App\">\n      <h2>Skud ud til {shoutouttohisfamily}</h2>\n      <button onClick={getNewWord}>Nyt Ord</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}